{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alloy/Desktop/React%20Projects/grad/src/schema.ts"],"sourcesContent":["import {object, string} from 'zod';\r\n\r\nexport const signUpSchema = object({\r\n    email: string({required_error : \"Email is required\"}).email(\"Invalid email\"),\r\n    password: string({required_error : \"Password is required\"}).min(8,\"Password must be at least 8 characters\").max(32,\"Password must be at most 32 characters\")\r\n})\r\n\r\nexport const signInSchema = object({\r\n    email: string({required_error : \"Email is required\"}).email(\"Invalid email\"),\r\n    password: string({required_error : \"Password is required\"})\r\n})"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,eAAe,CAAA,GAAA,oIAAA,CAAA,SAAM,AAAD,EAAE;IAC/B,OAAO,CAAA,GAAA,oIAAA,CAAA,SAAM,AAAD,EAAE;QAAC,gBAAiB;IAAmB,GAAG,KAAK,CAAC;IAC5D,UAAU,CAAA,GAAA,oIAAA,CAAA,SAAM,AAAD,EAAE;QAAC,gBAAiB;IAAsB,GAAG,GAAG,CAAC,GAAE,0CAA0C,GAAG,CAAC,IAAG;AACvH;AAEO,MAAM,eAAe,CAAA,GAAA,oIAAA,CAAA,SAAM,AAAD,EAAE;IAC/B,OAAO,CAAA,GAAA,oIAAA,CAAA,SAAM,AAAD,EAAE;QAAC,gBAAiB;IAAmB,GAAG,KAAK,CAAC;IAC5D,UAAU,CAAA,GAAA,oIAAA,CAAA,SAAM,AAAD,EAAE;QAAC,gBAAiB;IAAsB;AAC7D","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alloy/Desktop/React%20Projects/grad/src/env.js"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\nexport const env = createEnv({\n  /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */\n  server: {\n    AUTH_SECRET:\n      process.env.NODE_ENV === \"production\"\n        ? z.string()\n        : z.string().optional(),\n    // AUTH_DISCORD_ID: z.string(),\n    // AUTH_DISCORD_SECRET: z.string(),\n    DATABASE_URL: z.string().url(),\n    NODE_ENV: z\n      .enum([\"development\", \"test\", \"production\"])\n      .default(\"development\"),\n  },\n\n  /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   */\n  client: {\n    // NEXT_PUBLIC_CLIENTVAR: z.string(),\n  },\n\n  /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */\n  runtimeEnv: {\n    AUTH_SECRET: process.env.AUTH_SECRET,\n    // AUTH_DISCORD_ID: process.env.AUTH_DISCORD_ID,\n    // AUTH_DISCORD_SECRET: process.env.AUTH_DISCORD_SECRET,\n    DATABASE_URL: process.env.DATABASE_URL,\n    NODE_ENV: process.env.NODE_ENV,\n  },\n  /**\n   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially\n   * useful for Docker builds.\n   */\n  skipValidation: !!process.env.SKIP_ENV_VALIDATION,\n  /**\n   * Makes it so that empty strings are treated as undefined. `SOME_VAR: z.string()` and\n   * `SOME_VAR=''` will throw an error.\n   */\n  emptyStringAsUndefined: true,\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;IAC3B;;;GAGC,GACD,QAAQ;QACN,aACE,6EAEI,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QACzB,+BAA+B;QAC/B,mCAAmC;QACnC,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,UAAU,oIAAA,CAAA,IAAC,CACR,IAAI,CAAC;YAAC;YAAe;YAAQ;SAAa,EAC1C,OAAO,CAAC;IACb;IAEA;;;;GAIC,GACD,QAAQ;IAER;IAEA;;;GAGC,GACD,YAAY;QACV,aAAa,QAAQ,GAAG,CAAC,WAAW;QACpC,gDAAgD;QAChD,wDAAwD;QACxD,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,QAAQ;IACV;IACA;;;GAGC,GACD,gBAAgB,CAAC,CAAC,QAAQ,GAAG,CAAC,mBAAmB;IACjD;;;GAGC,GACD,wBAAwB;AAC1B","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alloy/Desktop/React%20Projects/grad/src/server/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nimport { env } from \"~/env\";\n\nconst createPrismaClient = () =>\n  new PrismaClient({\n    log:\n      env.NODE_ENV === \"development\" ? [\"query\", \"error\", \"warn\"] : [\"error\"],\n  });\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: ReturnType<typeof createPrismaClient> | undefined;\n};\n\nexport const db = globalForPrisma.prisma ?? createPrismaClient();\n\nif (env.NODE_ENV !== \"production\") globalForPrisma.prisma = db;"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEA,MAAM,qBAAqB,IACzB,IAAI,6HAAA,CAAA,eAAY,CAAC;QACf,KACE,0GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,gBAAgB;YAAC;YAAS;YAAS;SAAO,GAAG;YAAC;SAAQ;IAC3E;AAEF,MAAM,kBAAkB;AAIjB,MAAM,KAAK,gBAAgB,MAAM,IAAI;AAE5C,IAAI,0GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,cAAc,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alloy/Desktop/React%20Projects/grad/src/server/auth/config.ts"],"sourcesContent":["import { PrismaAdapter } from \"@auth/prisma-adapter\";\nimport { type DefaultSession, type NextAuthConfig } from \"next-auth\";\nimport Credentials from \"next-auth/providers/credentials\";\nimport { signInSchema } from \"~/schema\";\nimport bcrypt from \"bcryptjs\";\n\nimport { db } from \"~/server/db\";\n\n/**\n * Module augmentation for `next-auth` types. Allows us to add custom properties to the `session`\n * object and keep type safety.\n *\n * @see https://next-auth.js.org/getting-started/typescript#module-augmentation\n */\ndeclare module \"next-auth\" {\n  interface Session extends DefaultSession {\n    user: {\n      id: string;\n      // ...other properties\n      // role: UserRole;\n    } & DefaultSession[\"user\"];\n  }\n\n  // interface User {\n  //   // ...other properties\n  //   // role: UserRole;\n  // }\n}\n\n/**\n * Options for NextAuth.js used to configure adapters, providers, callbacks, etc.\n *\n * @see https://next-auth.js.org/configuration/options\n */\nexport const authConfig = {\n  providers: [\n    Credentials({\n      credentials: {\n        email: {},\n        password: {},\n      },\n      authorize: async (credentials) => {\n        try {\n          const { email, password } =\n            await signInSchema.parseAsync(credentials);\n\n          const user = await db.user.findUnique({\n            where: {\n              email: email,\n            },\n          });\n\n          const passwordMatch = await bcrypt.compare(\n            password,\n            user?.password ?? \"\",\n          );\n\n          if (!passwordMatch) {\n            return null;\n          }\n\n          return user;\n        } catch (error) {\n          return null;\n        }\n      },\n    }),\n    /**\n     * ...add more providers here.\n     *\n     * Most other providers require a bit more work than the Discord provider. For example, the\n     * GitHub provider requires you to add the `refresh_token_expires_in` field to the Account\n     * model. Refer to the NextAuth.js docs for the provider you want to use. Example:\n     *\n     * @see https://next-auth.js.org/providers/github\n     */\n  ],\n  session: {\n    strategy: \"jwt\",\n  },\n  adapter: PrismaAdapter(db),\n  callbacks: {\n    session: ({ session, token }) => ({\n      ...session,\n      user: {\n        ...session.user,\n        id: token.sub,\n      },\n    }),\n  },\n} satisfies NextAuthConfig;"],"names":[],"mappings":";;;AAAA;AAEA;AAAA;AACA;AACA;AAEA;;;;;;AA4BO,MAAM,aAAa;IACxB,WAAW;QACT,CAAA,GAAA,0LAAA,CAAA,UAAW,AAAD,EAAE;YACV,aAAa;gBACX,OAAO,CAAC;gBACR,UAAU,CAAC;YACb;YACA,WAAW,OAAO;gBAChB,IAAI;oBACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GACvB,MAAM,6GAAA,CAAA,eAAY,CAAC,UAAU,CAAC;oBAEhC,MAAM,OAAO,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;wBACpC,OAAO;4BACL,OAAO;wBACT;oBACF;oBAEA,MAAM,gBAAgB,MAAM,iIAAA,CAAA,UAAM,CAAC,OAAO,CACxC,UACA,MAAM,YAAY;oBAGpB,IAAI,CAAC,eAAe;wBAClB,OAAO;oBACT;oBAEA,OAAO;gBACT,EAAE,OAAO,OAAO;oBACd,OAAO;gBACT;YACF;QACF;KAUD;IACD,SAAS;QACP,UAAU;IACZ;IACA,SAAS,CAAA,GAAA,oJAAA,CAAA,gBAAa,AAAD,EAAE,mHAAA,CAAA,KAAE;IACzB,WAAW;QACT,SAAS,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,GAAK,CAAC;gBAChC,GAAG,OAAO;gBACV,MAAM;oBACJ,GAAG,QAAQ,IAAI;oBACf,IAAI,MAAM,GAAG;gBACf;YACF,CAAC;IACH;AACF","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alloy/Desktop/React%20Projects/grad/src/server/auth/index.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport { cache } from \"react\";\n\nimport { authConfig } from \"./config\";\n\nconst { auth: uncachedAuth, handlers, signIn, signOut } = NextAuth(authConfig);\n\nconst auth = cache(uncachedAuth);\n\nexport { auth, handlers, signIn, signOut };"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AAEA;;;;AAEA,MAAM,EAAE,MAAM,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAQ,AAAD,EAAE,+HAAA,CAAA,aAAU;AAE7E,MAAM,OAAO,CAAA,GAAA,qMAAA,CAAA,QAAK,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alloy/Desktop/React%20Projects/grad/src/app/actions/auth.ts"],"sourcesContent":["'use server';\r\n\r\nimport bcrypt from 'bcryptjs';\r\nimport { AuthError } from 'next-auth';\r\nimport { redirect } from 'next/navigation';\r\nimport { ZodError } from 'zod';\r\nimport { signUpSchema } from '~/schema'\r\nimport { signIn, signOut } from '~/server/auth';\r\nimport { db } from '~/server/db';\r\n\r\nexport async function signout() {\r\n  await signOut()\r\n}\r\n\r\nexport async function authenticate(\r\n  prevState: string | undefined,\r\n  formData: FormData\r\n) {\r\n  try {\r\n    await signIn(\"credentials\", formData)\r\n  }\r\n  catch (error) {\r\n    if(error instanceof AuthError) {\r\n      switch (error.type) {\r\n        case \"CredentialsSignin\" :\r\n          return \"Invalid credentials\"\r\n        default :\r\n          return \"Something went wrong\"\r\n      }\r\n    }\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function register(\r\n  prevState: string | undefined,\r\n  formData: FormData\r\n) {\r\n  try{\r\n    const {email,password} = await signUpSchema.parseAsync({\r\n      email: formData.get(\"email\"),\r\n      password: formData.get(\"password\"),\r\n    });\r\n    \r\n    const user = await db.user.findUnique({\r\n      where: {\r\n        email: email\r\n      }\r\n    })\r\n\r\n    if(user) {\r\n      return \"User already exists\"\r\n    }\r\n\r\n    const hash = await bcrypt.hash(password, 10)\r\n\r\n    await db.user.create({\r\n      data: {\r\n        email: email,\r\n        password: hash\r\n      }\r\n    })\r\n  }\r\n  catch(error) {\r\n    if(error instanceof ZodError){\r\n      return error.errors.map((error) => error.message).join(\", \")\r\n    }\r\n  }\r\n\r\n  redirect(\"/signin\")\r\n}"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAEO,eAAe,uCAAK,GAAL;IACpB,MAAM,CAAA,GAAA,8HAAA,CAAA,UAAO,AAAD;AACd;AAEO,eAAe,uCAAU,GAAV,aACpB,SAA6B,EAC7B,QAAkB;IAElB,IAAI;QACF,MAAM,CAAA,GAAA,8HAAA,CAAA,SAAM,AAAD,EAAE,eAAe;IAC9B,EACA,OAAO,OAAO;QACZ,IAAG,iBAAiB,wKAAA,CAAA,YAAS,EAAE;YAC7B,OAAQ,MAAM,IAAI;gBAChB,KAAK;oBACH,OAAO;gBACT;oBACE,OAAO;YACX;QACF;QACA,MAAM;IACR;AACF;AAEO,eAAe,uCAAM,GAAN,SACpB,SAA6B,EAC7B,QAAkB;IAElB,IAAG;QACD,MAAM,EAAC,KAAK,EAAC,QAAQ,EAAC,GAAG,MAAM,6GAAA,CAAA,eAAY,CAAC,UAAU,CAAC;YACrD,OAAO,SAAS,GAAG,CAAC;YACpB,UAAU,SAAS,GAAG,CAAC;QACzB;QAEA,MAAM,OAAO,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,OAAO;gBACL,OAAO;YACT;QACF;QAEA,IAAG,MAAM;YACP,OAAO;QACT;QAEA,MAAM,OAAO,MAAM,iIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QAEzC,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,MAAM,CAAC;YACnB,MAAM;gBACJ,OAAO;gBACP,UAAU;YACZ;QACF;IACF,EACA,OAAM,OAAO;QACX,IAAG,iBAAiB,oIAAA,CAAA,WAAQ,EAAC;YAC3B,OAAO,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,QAAU,MAAM,OAAO,EAAE,IAAI,CAAC;QACzD;IACF;IAEA,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;;;IA5DsB;IAIA;IAoBA;;AAxBA,+OAAA;AAIA,+OAAA;AAoBA,+OAAA","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alloy/Desktop/React%20Projects/grad/src/app/dashboard/SignOutButton.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/SignOutButton.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/SignOutButton.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuS,GACpU,qEACA","debugId":null}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alloy/Desktop/React%20Projects/grad/src/app/dashboard/SignOutButton.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/SignOutButton.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/SignOutButton.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmR,GAChT,iDACA","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alloy/Desktop/React%20Projects/grad/src/app/dashboard/page.tsx"],"sourcesContent":["import getServerSession from \"next-auth\";\r\nimport { authConfig } from \"~/server/auth/config\";\r\nimport { redirect } from \"next/navigation\";\r\nimport SignOutButton from \"./SignOutButton\";\r\n\r\nexport default async function Page() {\r\n  const session = await getServerSession(authConfig);\r\n\r\n  if (!session) {\r\n    redirect(\"/signin\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>Dashboard</p>\r\n      <SignOutButton />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;AAAA;AACA;;;;;;AAEe,eAAe;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,qJAAA,CAAA,UAAgB,AAAD,EAAE,+HAAA,CAAA,aAAU;IAEjD,IAAI,CAAC,SAAS;QACZ,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,qBACE,8OAAC;;0BACC,8OAAC;0BAAE;;;;;;0BACH,8OAAC,yIAAA,CAAA,UAAa;;;;;;;;;;;AAGpB","debugId":null}}]
}